{"version":3,"file":"static/js/198.9f2ac210.chunk.js","mappings":"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","sources":["components/StyledApp.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactList/StyledContactList.js","components/ContactList/index.jsx","components/ContactForm/StyledContactForm.js","components/ContactForm/index.jsx","components/hooks/useForm.js","components/Filter/StyledFilter.js","components/Filter/index.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAllContacts = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const StyledTitleContacts = styled.h2`\n  margin-top: 70px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 5px;\n  max-width: 500px;\n  width: auto;\n  min-height: 500px;\n  margin: 50px auto;\n  background: white;\n  height: auto;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n  background-color: rgba(232, 160, 191, 0.7);\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 100vh;\n  }\n`;\n\nexport const Header = styled.h1`\n  margin: 30px;\n  text-align: center;\n  font-size: 25px;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  background-color: rgba(186, 144, 198, 0.8);\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n`;\n\nexport const StyledItem = styled.li`\n  background-color: #fdf4f5;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n  padding: 10px;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledContact = styled.div`\n  margin-right: 30px;\n`;\n\nexport const StyledName = styled.span`\n  margin-right: 1em;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport {\n  StyledList,\n  StyledItem,\n  StyledContact,\n  StyledName,\n} from './StyledContactList';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <StyledList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <StyledItem key={id}>\n          <StyledContact>\n            <StyledName>{name}</StyledName>\n            <span>{number}</span>\n          </StyledContact>\n          <button type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </button>\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background-color: rgba(186, 144, 198, 0.8);\n  display: flex;\n  min-width: 290px;\n\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n`;\n\nexport const StyledLabel = styled.label`\n  width: 100%;\n  margin-bottom: 2px;\n  color: black;\n  font-size: 15px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const StyledInputName = styled.input`\n  width: 95%;\n  margin: 10px auto;\n  text-align: center;\n  height: 30px;\n`;\n\nexport const StyledInputNumber = styled.input`\n  width: 95%;\n  margin-bottom: 10px;\n  text-align: center;\n  height: 30px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useForm } from '../hooks/useForm';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledInputName,\n  StyledInputNumber,\n} from './StyledContactForm';\n\nconst ContactForm = () => {\n  const [values, handleChange, resetForm] = useForm({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name: values.name, number: values.number }));\n    resetForm();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        <StyledInputName\n          value={values.name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+(\\s[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </StyledLabel>\n      <StyledLabel>\n        <StyledInputNumber\n          value={values.number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"(\\+48)?\\s?(\\d{3}-\\d{3}-\\d{3}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{9,11})\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLabel>\n\n      <button type=\"submit\">Add contact</button>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\n\nexport const useForm = initialValues => {\n  const [values, setValues] = useState(initialValues);\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const resetForm = () => {\n    setValues(initialValues);\n  };\n\n  return [values, handleChange, resetForm];\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const StyledLabelFilter = styled.label`\n  margin: 0 auto;\n  display: flex;\n`;\n\nexport const StyledFilterInput = styled.input`\n  width: 300px;\n  margin: 0px auto;\n  text-align: center;\n  height: 30px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport {\n  StyledFilter,\n  StyledLabelFilter,\n  StyledFilterInput,\n} from './StyledFilter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <StyledFilter>\n      <StyledLabelFilter>\n        <StyledFilterInput\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n          placeholder=\"Search for contact\"\n        />\n      </StyledLabelFilter>\n    </StyledFilter>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport ContactList from 'components/ContactList/index';\nimport ContactForm from 'components/ContactForm/index';\nimport Filter from 'components/Filter/index';\nimport {\n  selectContacts,\n  selectFilter,\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport {\n  StyledAllContacts,\n  StyledTitleContacts,\n  Wrapper,\n  Header,\n} from 'components/StyledApp';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(\n    async values => {\n      try {\n        await dispatch(addContact(values));\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n    [dispatch]\n  );\n\n  const handleFilterChange = useCallback(\n    e => {\n      dispatch(setFilter(e.target.value));\n    },\n    [dispatch]\n  );\n\n  const handleDelete = useCallback(\n    id => {\n      dispatch(deleteContact(id));\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title> Contacs </title>\n      </Helmet>\n      <Wrapper>\n        <Header>Phonebook</Header>\n        <ContactForm onSubmit={handleSubmit} />\n        <StyledTitleContacts>Contacts</StyledTitleContacts>\n        <StyledAllContacts>All contacts: {contacts.length}</StyledAllContacts>\n        <Filter value={filter} onChange={handleFilterChange} />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {error && <div style={{ color: 'red' }}>{error.message}</div>}\n        {visibleContacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={handleDelete}\n          />\n        ) : (\n          <p>No contacts available.</p>\n        )}\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["StyledAllContacts","styled","_templateObject","_taggedTemplateLiteral","StyledTitleContacts","_templateObject2","Wrapper","_templateObject3","Header","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","normalizedFilter","toLowerCase","contact","includes","StyledList","StyledItem","StyledContact","StyledName","useSelector","dispatch","useDispatch","filteredContacts","_jsx","children","_ref","id","number","_jsxs","type","onClick","deleteContact","handleDelete","StyledForm","StyledLabel","StyledInputName","StyledInputNumber","_useForm","initialValues","_useState","useState","_useState2","_slicedToArray","values","setValues","event","_objectSpread","_defineProperty","target","useForm","_useForm2","handleChange","resetForm","onSubmit","e","preventDefault","addContact","onChange","placeholder","pattern","title","required","StyledFilter","StyledLabelFilter","StyledFilterInput","setFilter","ContactsPage","visibleContacts","useEffect","fetchContacts","handleSubmit","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","t0","alert","message","stop","_x","handleFilterChange","_Fragment","Helmet","ContactForm","Filter","style","color","ContactList","onDeleteContact"],"sourceRoot":""}