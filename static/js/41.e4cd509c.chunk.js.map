{"version":3,"file":"static/js/41.e4cd509c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/StyledContactList.js","components/ContactList/index.jsx","components/ContactForm/StyledContactForm.js","components/ContactForm/index.jsx","components/hooks/useForm.js","components/Filter/StyledFilter.js","components/Filter/index.jsx","components/StyledApp.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  background-color: rgba(186, 144, 198, 0.8);\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n`;\n\nexport const StyledItem = styled.li`\n  background-color: #fdf4f5;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n  padding: 10px;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledContact = styled.div`\n  margin-right: 30px;\n`;\n\nexport const StyledName = styled.span`\n  margin-right: 1em;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport {\n  StyledList,\n  StyledItem,\n  StyledContact,\n  StyledName,\n} from './StyledContactList';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <StyledList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <StyledItem key={id}>\n          <StyledContact>\n            <StyledName>{name}</StyledName>\n            <span>{number}</span>\n          </StyledContact>\n          <button type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </button>\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background-color: rgba(186, 144, 198, 0.8);\n  display: flex;\n  min-width: 290px;\n\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n`;\n\nexport const StyledLabel = styled.label`\n  width: 100%;\n  margin-bottom: 2px;\n  color: black;\n  font-size: 15px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const StyledInputName = styled.input`\n  width: 95%;\n  margin: 10px auto;\n  text-align: center;\n  height: 30px;\n`;\n\nexport const StyledInputNumber = styled.input`\n  width: 95%;\n  margin-bottom: 10px;\n  text-align: center;\n  height: 30px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useForm } from '../hooks/useForm';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledInputName,\n  StyledInputNumber,\n} from './StyledContactForm';\n\nconst ContactForm = () => {\n  const [values, handleChange, resetForm] = useForm({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name: values.name, number: values.number }));\n    resetForm();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        <StyledInputName\n          value={values.name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+(\\s[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </StyledLabel>\n      <StyledLabel>\n        <StyledInputNumber\n          value={values.number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"(\\+48)?\\s?(\\d{3}-\\d{3}-\\d{3}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{9,11})\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLabel>\n\n      <button type=\"submit\">Add contact</button>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\n\nexport const useForm = initialValues => {\n  const [values, setValues] = useState(initialValues);\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const resetForm = () => {\n    setValues(initialValues);\n  };\n\n  return [values, handleChange, resetForm];\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const StyledLabelFilter = styled.label`\n  margin: 0 auto;\n  display: flex;\n`;\n\nexport const StyledFilterInput = styled.input`\n  width: 300px;\n  margin: 0px auto;\n  text-align: center;\n  height: 30px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport {\n  StyledFilter,\n  StyledLabelFilter,\n  StyledFilterInput,\n} from './StyledFilter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <StyledFilter>\n      <StyledLabelFilter>\n        <StyledFilterInput\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n          placeholder=\"Search for contact\"\n        />\n      </StyledLabelFilter>\n    </StyledFilter>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledAllContacts = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const StyledTitleContacts = styled.h2`\n  margin-top: 70px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 5px;\n  max-width: 500px;\n  width: auto;\n  min-height: 500px;\n  margin: 50px auto;\n  background: white;\n  height: auto;\n  border-radius: 3px;\n  box-shadow: 0 9px 50px hsla(20, 67%, 75%, 0.31);\n  background-color: rgba(232, 160, 191, 0.7);\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 100vh;\n  }\n`;\n\nexport const Header = styled.h1`\n  margin: 30px;\n  text-align: center;\n  font-size: 25px;\n`;\n","import React from 'react';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport ContactList from 'components/ContactList/index';\nimport ContactForm from 'components/ContactForm/index';\nimport Filter from 'components/Filter/index';\nimport {\n  selectContacts,\n  selectFilter,\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport {\n  StyledAllContacts,\n  StyledTitleContacts,\n  Wrapper,\n  Header,\n} from 'components/StyledApp';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(\n    async values => {\n      try {\n        await dispatch(addContact(values));\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n    [dispatch]\n  );\n\n  const handleFilterChange = useCallback(\n    e => {\n      dispatch(setFilter(e.target.value));\n    },\n    [dispatch]\n  );\n\n  const handleDelete = useCallback(\n    id => {\n      dispatch(deleteContact(id));\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title> Contacs </title>\n      </Helmet>\n      <Wrapper>\n        <Header>Phonebook</Header>\n        <ContactForm onSubmit={handleSubmit} />\n        <StyledTitleContacts>Contacts</StyledTitleContacts>\n        <StyledAllContacts>All contacts: {contacts.length}</StyledAllContacts>\n        <Filter value={filter} onChange={handleFilterChange} />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {error && <div style={{ color: 'red' }}>{error.message}</div>}\n        {visibleContacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={handleDelete}\n          />\n        ) : (\n          <p>No contacts available.</p>\n        )}\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","StyledContact","_templateObject3","StyledName","_templateObject4","useSelector","dispatch","useDispatch","filteredContacts","_jsx","children","map","_ref","id","number","_jsxs","type","onClick","deleteContact","handleDelete","StyledForm","StyledLabel","StyledInputName","StyledInputNumber","_useForm","initialValues","_useState","useState","_useState2","_slicedToArray","values","setValues","event","_objectSpread","_defineProperty","target","value","useForm","_useForm2","handleChange","resetForm","onSubmit","e","preventDefault","addContact","onChange","placeholder","pattern","title","required","StyledFilter","StyledLabelFilter","StyledFilterInput","setFilter","StyledAllContacts","StyledTitleContacts","Wrapper","Header","ContactsPage","visibleContacts","useEffect","fetchContacts","handleSubmit","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","alert","message","stop","_x","apply","arguments","handleFilterChange","_Fragment","Helmet","ContactForm","length","Filter","style","color","ContactList","onDeleteContact"],"sourceRoot":""}