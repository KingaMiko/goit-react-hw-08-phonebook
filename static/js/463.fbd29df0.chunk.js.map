{"version":3,"file":"static/js/463.fbd29df0.chunk.js","mappings":"oQAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACrCC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAU,EACpDC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAM,EAE5CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBI,IACjB,SAACF,EAAUG,GACT,IAAMO,EAAmBP,EAAOQ,cAChC,OAAOX,EAASG,QAAO,SAAAS,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EAAiB,GAEzD,I,oEC4DF,EAjEoB,WAClB,IAAMV,GAAWe,EAAAA,EAAAA,IAAYjB,GACvBK,GAASY,EAAAA,EAAAA,IAAYb,GACrBc,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBlB,EACtBG,QAAO,SAAAS,GAAO,OACbA,EAAQC,KAAKF,cAAcG,SAASX,EAAOQ,cAAc,IAE1DQ,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEP,KAAKS,cAAcD,EAAER,KAAK,IAM9C,OACEU,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,SAAU,QACVC,MAAO,OACPC,UAAW,CAAEC,GAAI,OAAQC,GAAI,SAC7BC,UAAW,CAAEF,GAAI,UAAWC,GAAI,QAChCE,GAAI,EACJC,GAAI,QACJC,SAEDhB,EAAiBiB,KAAI,SAAAC,EAAuBC,GAAK,IAAzBC,EAAEF,EAAFE,GAAIzB,EAAIuB,EAAJvB,KAAM0B,EAAMH,EAANG,OAAM,OACvCC,EAAAA,EAAAA,MAAChB,EAAAA,EAAG,CAEFC,GAAI,CACFgB,QAAS,OACTC,WAAY,SACZC,QAAS,YACTC,aAAc,kBACdV,SAAA,EAEFX,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACC,MAAM,UAAUrB,GAAI,CAAEsB,YAAa,MAC9CxB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEuB,KAAM,EAAGC,SAAU,GAAIf,UAChCX,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACC,QAAQ,KAAKL,MAAM,YAAYM,QAAM,EAAAlB,SAC9CrB,OAGLU,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEuB,KAAM,EAAGC,SAAU,EAAGI,WAAY,GAAInB,UAC/CX,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,QAAM,EAAAlB,UAChCX,EAAAA,EAAAA,KAAA,KACE+B,KAAI,OAAAC,OAAShB,GACbiB,MAAO,CAAEC,eAAgB,OAAQX,MAAO,WAAYZ,SAEnDK,SAIPhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CACTC,QAAS,kBA1CE,SAAArB,GACnBtB,GAAS4C,EAAAA,EAAAA,IAActB,GACzB,CAwCyBuB,CAAavB,EAAG,EAC/BwB,KAAK,QACLrC,GAAI,CAAEqB,MAAOiB,EAAAA,EAAAA,QAAAA,QAAAA,KAA4BV,WAAY,GAAInB,UAEzDX,EAAAA,EAAAA,KAACyC,EAAAA,EAAiB,QA7Bf1B,EA+BD,KAId,E,2DCqHMnC,EAAS,I,MAAI8D,GAAJ,CAAW,CAAEC,KA1LT,CAEjB,QACA,SACA,aACA,aACA,QACA,QACA,UACA,UACA,WACA,aACA,YACA,aACA,iBACA,YACA,gBAGA,OACA,QACA,SACA,QACA,UACA,YACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,UAGA,gBACA,iBACA,aACA,WACA,gBACA,aACA,aACA,aACA,mBACA,cACA,oBACA,oBACA,oBACA,kBACA,kBACA,kBACA,WACA,YACA,YAGA,aACA,MACA,QACA,aACA,UACA,aACA,SACA,SACA,SACA,UACA,UACA,eACA,UACA,eACA,YACA,WACA,YACA,YACA,YACA,eACA,UACA,eACA,YACA,WACA,cACA,SACA,cACA,WACA,UACA,eACA,UACA,eACA,YACA,WAGA,aACA,kBACA,aACA,mBACA,kBACA,mBACA,gBACA,kBACA,YACA,iBACA,kBACA,mBACA,mBACA,cACA,eACA,oBACA,eACA,cACA,cAGA,QACA,UACA,aACA,QACA,QACA,SACA,UACA,UAGA,OACA,QACA,YACA,YACA,OACA,SACA,SACA,OACA,QACA,YACA,YACA,OACA,SA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","sources":["redux/contacts/selectors.js","components/ContactList/index.jsx","components/hooks/useForm.js","components/ContactForm/index.jsx","components/Filter/index.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Box, Typography, IconButton } from '@mui/material';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { theme } from 'components/theme';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Box\n      sx={{\n        maxWidth: '400px',\n        width: '100%',\n        maxHeight: { xs: 'none', md: '400px' },\n        overflowY: { xs: 'visible', md: 'auto' },\n        mt: 3,\n        mx: 'auto',\n      }}\n    >\n      {filteredContacts.map(({ id, name, number }, index) => (\n        <Box\n          key={id}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            padding: '10px 10px',\n            borderBottom: '1px solid #ddd',\n          }}\n        >\n          <PhoneIcon color=\"primary\" sx={{ marginRight: 3 }} />\n          <Box sx={{ flex: 1, minWidth: 0 }}>\n            <Typography variant=\"h6\" color=\"secondary\" noWrap>\n              {name}\n            </Typography>\n          </Box>\n          <Box sx={{ flex: 1, minWidth: 0, marginLeft: 1 }}>\n            <Typography variant=\"body1\" noWrap>\n              <a\n                href={`tel:${number}`}\n                style={{ textDecoration: 'none', color: 'inherit' }}\n              >\n                {number}\n              </a>\n            </Typography>\n          </Box>\n          <IconButton\n            onClick={() => handleDelete(id)}\n            size=\"small\"\n            sx={{ color: theme.palette.primary.main, marginLeft: 1 }}\n          >\n            <DeleteOutlineIcon />\n          </IconButton>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport Filter from 'bad-words';\n\nconst customList = [\n  // Odmiany słowa \"kurwa\"\n  'kurwa',\n  'kurwie',\n  'kurwą',\n  'kurwę',\n  'kurwo',\n  'kurwy',\n  'kurwach',\n  'kurwami',\n  'kurwiska',\n  'kurwiszcze',\n  'kurwiszon',\n  'kurwiszony',\n  'kurwiszonów',\n  'kurwojady',\n  'kurwojadów',\n\n  // Odmiany słowa \"chuj\"\n  'chuj',\n  'chuja',\n  'chujem',\n  'chuju',\n  'chujowi',\n  'chujów',\n  'chuje',\n  'chujek',\n  'chujami',\n  'chujoza',\n  'chujnia',\n  'chujowy',\n  'chujowa',\n  'chujowe',\n\n  // Odmiany słowa \"pierdolić\"\n  'pierdolę',\n  'pierdolić',\n  'pierdolisz',\n  'pierdoli',\n  'pierdolą',\n  'pierdolony',\n  'pierdolona',\n  'pierdolone',\n  'pierdolęcie',\n  'pierdolenie',\n  'pierdolnięty',\n  'pierdolnięta',\n  'pierdolnięte',\n  'spierdolić',\n  'spierdolił',\n  'opierdolić',\n  'opierdol',\n  'opierdoli',\n  'opierdala',\n\n  // Odmiany słowa \"jebać\"\n  'jebać',\n  'jeb',\n  'jebie',\n  'jebię',\n  'jebiesz',\n  'jebią',\n  'jebany',\n  'jebana',\n  'jebane',\n  'jebanka',\n  'jebanko',\n  'wyjebać',\n  'wyjebie',\n  'wyjebią',\n  'wyjebiesz',\n  'wyjebali',\n  'zajebisty',\n  'zajebista',\n  'zajebiste',\n  'zajebać',\n  'zajebie',\n  'zajebią',\n  'zajebiesz',\n  'zajebali',\n  'zjebać',\n  'zjebie',\n  'zjebią',\n  'zjebiesz',\n  'zjebane',\n  'dojebać',\n  'dojebie',\n  'dojebią',\n  'dojebiesz',\n  'dojebane',\n\n  // Odmiany słowa \"spierdalać\"\n  'spierdalaj',\n  'spierdalać',\n  'spierdalam',\n  'spierdalają',\n  'spierdalał',\n  'spierdalała',\n  'spierdalajcie',\n  'spierdolić',\n  'spierdoli',\n  'spierdolą',\n  'spierdolił',\n  'spierdoliła',\n  'spierdoliło',\n  'spierdolisz',\n  'spierdolicie',\n  'pospierdalać',\n  'pospierdalaj',\n  'pospierdala',\n  'pospierdali',\n\n  // Odmiany słowa \"pizda\"\n  'pizda',\n  'pizdzie',\n  'pizdą',\n  'pizdu',\n  'pizdy',\n  'pizdom',\n  'pizdach',\n  'pizdami',\n\n  // Inne wulgaryzmy i ich odmiany\n  'cipa',\n  'cipie',\n  'cipą',\n  'cipę',\n  'cipy',\n  'cipach',\n  'cipami',\n  'dupa',\n  'dupie',\n  'dupą',\n  'dupę',\n  'dupy',\n  'dupach',\n  'dupami',\n  'huj',\n  'huja',\n  'hujowi',\n  'hujem',\n  'huju',\n  'hujów',\n  'huje',\n  'hujami',\n  'dziwka',\n  'dziwki',\n  'dziwce',\n  'dziwkę',\n  'dziwko',\n  'dziwek',\n  'dziwką',\n  'dziwkami',\n  'dziwkach',\n  'cipa',\n  'cipie',\n  'cipą',\n  'cipę',\n  'cipy',\n  'cipach',\n  'cipami',\n  'dupa',\n  'dupie',\n  'dupą',\n  'dupę',\n  'dupy',\n  'dupach',\n  'dupami',\n  'huj',\n  'huja',\n  'hujowi',\n  'hujem',\n  'huju',\n  'hujów',\n  'huje',\n  'hujami',\n\n  // Błędne wersje literowe popularnych wulgaryzmów\n  'kvrwa',\n  'chvuj',\n  'pierdvlę',\n  'jebvny',\n  'spierdvlaj',\n  'pizdva',\n];\n\nconst filter = new Filter({ list: customList });\n\nexport const useForm = initialValues => {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    if (name === 'number') {\n      if (value === '') {\n        const newErrors = { ...errors };\n        delete newErrors[name];\n        setErrors(newErrors);\n      } else if (\n        !value.match(\n          /(\\+48)?\\s?(\\d{3}-\\d{3}-\\d{3}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{9,11})/\n        )\n      ) {\n        setErrors({\n          ...errors,\n          [name]: 'Invalid phone number',\n        });\n      } else {\n        let newErrors = { ...errors };\n        delete newErrors[name];\n        setErrors(newErrors);\n      }\n    }\n\n    if (name === 'name') {\n      if (value === '') {\n        const newErrors = { ...errors };\n        delete newErrors[name];\n        setErrors(newErrors);\n      } else {\n        if (filter.isProfane(value)) {\n          setErrors({\n            ...errors,\n            [name]: 'Please avoid using offensive language',\n          });\n        } else {\n          const letterCount = (value.match(/[a-zA-Z]/g) || []).length;\n          if (letterCount < 3 || value.length > 20) {\n            setErrors({\n              ...errors,\n              [name]:\n                'Name must contain at least 3 letters and be no longer than 20 characters',\n            });\n          } else {\n            let newErrors = { ...errors };\n            delete newErrors[name];\n            setErrors(newErrors);\n          }\n        }\n      }\n    }\n  };\n  const resetForm = () => {\n    setValues(initialValues);\n    setErrors({});\n  };\n\n  const validate = () => {\n    let tempErrors = {};\n    if (\n      !values.name ||\n      (values.name.match(/[a-zA-Z]/g) || []).length < 3 ||\n      values.name.length > 20 ||\n      filter.isProfane(values.name)\n    ) {\n      tempErrors.name =\n        'Name must contain at least 3 letters and be no longer than 20 characters and not contain offensive language';\n    }\n    if (\n      !values.number.match(\n        /(\\+48)?\\s?(\\d{3}-\\d{3}-\\d{3}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{9,11})/\n      )\n    ) {\n      tempErrors.number = 'Invalid phone number';\n    }\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n\n  return [values, handleChange, resetForm, validate, errors];\n};\n","import { Button, TextField, Box } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useForm } from '../hooks/useForm';\n\nconst ContactForm = () => {\n  const [values, handleChange, resetForm, validate, errors] = useForm({\n    name: '',\n    number: '',\n  });\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      dispatch(addContact({ name: values.name, number: values.number }));\n      resetForm();\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      width=\"300px\"\n      bgcolor=\"rgba(255, 255, 255, 0.8)\"\n      padding=\"20px\"\n      borderRadius=\"3px\"\n      boxShadow=\"0 9px 50px hsla(20, 67%, 75%, 0.31)\"\n    >\n      <TextField\n        value={values.name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        placeholder=\"Name\"\n        required\n        fullWidth\n        InputLabelProps={{ shrink: true }}\n        sx={{ marginBottom: '10px' }}\n        error={!!errors.name}\n        helperText={errors.name}\n      />\n      <TextField\n        value={values.number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        placeholder=\"Number\"\n        fullWidth\n        required\n        sx={{ marginBottom: '10px' }}\n        error={!!errors.number}\n        helperText={errors.number}\n        InputLabelProps={{ shrink: true }}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ marginTop: '10px', width: '100%' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { TextField, Box } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box my={2}>\n      <TextField\n        variant=\"outlined\"\n        maxWidth=\"200px\"\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        label=\"Search for contact\"\n        placeholder=\"Enter contact name\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        sx={{\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          borderRadius: '3px',\n          '& fieldset': {\n            borderColor: 'rgba(0,0,0,0.23)',\n          },\n          '&:hover fieldset': {\n            borderColor: 'rgba(0,0,0,0.6)',\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'primary.main',\n          },\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList/index';\nimport ContactForm from 'components/ContactForm/index';\nimport Filter from 'components/Filter/index';\nimport { Box, Typography, CircularProgress, Alert } from '@mui/material';\nimport ContactsIcon from '@mui/icons-material/Contacts';\nimport { motion } from 'framer-motion';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(\n    async values => {\n      try {\n        await dispatch(addContact(values));\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Box\n        component={motion.div}\n        initial={{ opacity: 0, y: -50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        background=\"linear-gradient(45deg, #f2f2f2 30%, #d9d9d9 90%)\"\n        pt={5}\n        position=\"relative\"\n      >\n        <Box\n          position=\"absolute\"\n          top={0}\n          left={0}\n          width=\"100%\"\n          height=\"100%\"\n          zIndex=\"-1\"\n          overflow=\"hidden\"\n        >\n          <ContactsIcon\n            style={{\n              fontSize: '20vw',\n              opacity: 0.1,\n              position: 'absolute',\n              top: '20%',\n              left: '10%',\n              transform: 'rotate(25deg)',\n            }}\n          />\n          <ContactsIcon\n            style={{\n              fontSize: '20vw',\n              opacity: 0.1,\n              position: 'absolute',\n              bottom: '20%',\n              right: '10%',\n              transform: 'rotate(-25deg)',\n            }}\n          />\n        </Box>\n        <Typography\n          variant=\"h3\"\n          component=\"h1\"\n          textAlign=\"center\"\n          color=\"rgba(0,0,0,0.7)\"\n          fontWeight=\"bold\"\n          mb={3}\n        >\n          Your Contacts\n        </Typography>\n        <Box\n          display=\"flex\"\n          flexDirection={{ xs: 'column', md: 'row' }}\n          alignItems={{ xs: 'center', md: 'flex-start' }}\n          justifyContent=\"center\"\n          width=\"100%\"\n          maxWidth=\"1080px\"\n          px={2}\n        >\n          <Box flex=\"1\" mr={{ md: 4 }} mb={{ xs: 2, md: 0 }}>\n            <ContactForm onSubmit={handleSubmit} />\n          </Box>\n\n          <Box\n            flex=\"2\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"h6\" component=\"p\" mt={2}>\n              All contacts: {contacts.length}\n            </Typography>\n            <Filter />\n            {isLoading && <CircularProgress />}\n            {error && <Alert severity=\"error\">{error.message}</Alert>}\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              width=\"100%\"\n              mt={2}\n              px={2}\n            >\n              {visibleContacts.length > 0 ? (\n                <ContactList\n                  contacts={visibleContacts}\n                  onDeleteContact={id => dispatch(deleteContact(id))}\n                />\n              ) : (\n                <Typography variant=\"body1\" mt={2}>\n                  No contacts available.\n                </Typography>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","useSelector","dispatch","useDispatch","filteredContacts","sort","a","b","localeCompare","_jsx","Box","sx","maxWidth","width","maxHeight","xs","md","overflowY","mt","mx","children","map","_ref","index","id","number","_jsxs","display","alignItems","padding","borderBottom","PhoneIcon","color","marginRight","flex","minWidth","Typography","variant","noWrap","marginLeft","href","concat","style","textDecoration","IconButton","onClick","deleteContact","handleDelete","size","theme","DeleteOutlineIcon","Filter","list","_useForm","initialValues","_useState","useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","event","_event$target","target","value","_objectSpread","_defineProperty","newErrors","match","isProfane","length","tempErrors","Object","keys","useForm","_useForm2","handleChange","resetForm","validate","component","onSubmit","e","preventDefault","addContact","autoComplete","bgcolor","borderRadius","boxShadow","TextField","onChange","type","label","placeholder","required","fullWidth","InputLabelProps","shrink","marginBottom","helperText","Button","marginTop","my","setFilter","backgroundColor","borderColor","ContactsPage","visibleContacts","useEffect","fetchContacts","handleSubmit","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","alert","message","stop","_x","apply","arguments","_Fragment","Helmet","motion","initial","opacity","y","animate","transition","duration","flexDirection","justifyContent","background","pt","position","top","left","height","zIndex","overflow","ContactsIcon","fontSize","transform","bottom","right","textAlign","fontWeight","mb","px","mr","ContactForm","CircularProgress","Alert","severity","ContactList","onDeleteContact"],"sourceRoot":""}